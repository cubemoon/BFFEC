
/*!
 * Connect - session - Store
 * Copyright(c) 2010 Sencha Inc.
 * Copyright(c) 2011 TJ Holowaychuk
 * MIT Licensed
 */

/**
 * Module dependencies.
 */

var EventEmitter = require('events').EventEmitter
  , Session = require('./session')
  , Cookie = require('./cookie');

/**
 * Initialize abstract `Store`.
 *
 * @api private
 */

var Store = module.exports = function Store(options){};

/**
 * Inherit from `EventEmitter.prototype`.
 */

Store.prototype.__proto__ = EventEmitter.prototype;

/**
 * Re-generate the given requests's session.
 *
 * @param {IncomingRequest} req
 * @return {Function} fn
 * @api public
 */

Store.prototype.regenerate = function(req, fn){
  var self = this;
  this.destroy(req.sessionID, function(err){
    self.generate(req);
    fn(err);
  });
};

/**
 * Load a `Session` instance via the given `sid`
 * and invoke the callback `fn(err, sess)`.
 *
 * @param {String} sid
 * @param {Function} fn
 * @api public
 */

Store.prototype.load = function(sid, fn){
  var self = this;
  this.get(sid, function(err, sess){
    if (err) return fn(err);
    if (!sess) return fn();
    var req = { sessionID: sid, sessionStore: self };
    sess = self.createSession(req, sess);
    fn(null, sess);
  });
};

/**
 * Create session from JSON `sess` data.
 *
 * @param {IncomingRequest} req
 * @param {Object} sess
 * @return {Session}
 * @api private
 */

Store.prototype.createSession = function(req, sess){
  var expires = sess.cookie.expires
    , orig = sess.cookie.originalMaxAge;
  //{ originalMaxAge: null, expires: null, httpOnly: true, path: '/' }
  sess.cookie = new Cookie(sess.cookie);
  // { path: '/',
  //   _expires: null,
  //   originalMaxAge: null,
  //   httpOnly: true }

  if ('string' == typeof expires) sess.cookie.expires = new Date(expires);
  sess.cookie.originalMaxAge = orig;
  // console.log(sess)
  // { cookie:
  //  { path: '/',
  //    _expires: null,
  //    originalMaxAge: null,
  //    httpOnly: true },
  // user:
  //  { __v: 0,
  //    _id: '52bd3a0c75dc0af411000008',
  //    name: '章晓健',
  //    password: 'WEYnAyXfbYdWs5f7tTwH2w==',
  //    role: '1',
  //    projects: [ [Object] ],
  //    flag: { day: '', sign: '2014-02-07' },
  //    score: 96,
  //    weibo: 'http://weibo.com/u/2485883112/home',
  //    profile: 'HTML JS CSS NODEJS',
  //    signature: '',
  //    url: 'http://192.168.138.114:3000/bqcloud-master/index.html',
  //    email: 'zhangxiaojian@bianfeng.com',
  //    avatar: '../images/avatar/52bd3a0c75dc0af411000008.jpg',
  //    mobile: '13958111541',
  //    curSign: 1 },
  // success: '登入成功',
  // error: null }
  req.session = new Session(req, sess);
  return req.session;
};
